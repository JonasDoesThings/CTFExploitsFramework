from core.exploits.ExploitCategory import ExploitCategory
from core.exploits.Exploit import Exploit
from core.logger.Logger import Logger
from core.ui.YesNoPrompt import YesNoPrompt


class TestExploit(Exploit):
    target = None
    listener = None

    def __init__(self):
        super().__init__("Test", "Just for testing, miau", ExploitCategory.remote)

    def _prepare(self):
        Logger.info("Preparing " + self.name + "...")

        # self.target = RemoteTarget("127.0.0.1", 8383)
        # self.target.connect()

    def _run(self):
        Logger.info("Running " + self.name + "...")

        # response = self.target.read()
        response = "test"

        if YesNoPrompt.prompt("Is this successful?"):
            return True
        else:
            self.failed("No :(")

    def _after(self):
        Logger.success("Finished running " + self.name + " in " + str(self.time_elapsed) + " seconds!")

    def _cleanup(self):
        # self.target.close()
        pass
