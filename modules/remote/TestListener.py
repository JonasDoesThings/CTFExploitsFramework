from core.exploits.Exploit import Exploit
from core.exploits.ExploitCategory import ExploitCategory
from core.exploits.networking.SocketListener import SocketListener
from core.logger.Logger import Logger


class TestListener(Exploit):
    listener = None

    def __init__(self):
        super().__init__("TestListener", "Just for testing the listener", ExploitCategory.remote)

    def _prepare(self):
        Logger.info("Preparing " + self.name + "...")

        self.listener = SocketListener(8383)
        self.listener.listen()

    def _run(self):
        Logger.info("Running " + self.name + "...")

        response = self.listener.read()
        print(response)

        if "test" in response:
            self.after()
        else:
            self.failed()

    def _after(self):
        Logger.success("Finished running " + self.name + " in " + str(self.time_elapsed) + " seconds!")

    def _cleanup(self):
        self.listener.close()
